// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @db.Uuid
  email    String    @unique
  username String    @unique
  role     String
  password String
  comments Comment[]
  Vote     Vote[]
}

model Post {
  id        String    @id @db.Uuid
  title     String
  content   String
  date      DateTime  @default(now()) @db.Timestamptz()
  published Boolean   @default(false)
  comments  Comment[]
  Vote      Vote[]
}

model Comment {
  id      String   @id @db.Uuid
  content String
  date    DateTime @default(now()) @db.Timestamptz()
  post    Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  String   @db.Uuid
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.Uuid
  Vote    Vote[]
}

model Vote {
  id        String   @id @db.Uuid
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?  @db.Uuid
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?  @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  value     Int      @default(1)
}
